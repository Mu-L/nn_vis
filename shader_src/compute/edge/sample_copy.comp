#version 430

struct SamplePoint
{
    vec4 pos;
};

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
layout(binding = 0) restrict readonly buffer sample_input
{
    SamplePoint input_sample[];
};
layout(binding = 1) restrict writeonly buffer sample_output
{
    SamplePoint output_sample[];
};

uniform int work_group_offset;

vec4 read(highp uint index)
{
    return input_sample[index].pos;
}

void write(highp uint index, vec4 pos)
{
    output_sample[index].pos = pos;
}

void main() {
    highp uint index = gl_WorkGroupID.x + work_group_offset;
    vec4 sample_data = read(index);
    write(index, sample_data);
}
